#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Feb 13 14:48:39 2017

@author: zdhughes
"""

#pedestalTraces is a list of 2d numpy arrays. Shape: [# of traces][# of samples, # of channels]
#pedestalSums is a 2d numpy array. [# of traces, # of channels]
#pedestalTraces = te.extractDualSubtraces(traceList, te.pedestalLimitsImag, invert = False)
#pedestalSums = te.sumDualTraces(pedestalTraces)

#pedestalTracesInverted = te.extractDualSubtraces(traceList, te.pedestalLimitsImag, invert = True)
#pedestalSumsInverted = te.sumDualTraces(pedestalTracesInverted)

#offsets = te.getDualAvgTraceMedian(pedestalSums, te.pedestalIntervalImag, invert = False)
#traceListCorrected = te.pedestalDualSubtractions(traceList, offsets)

#signalTracesRaw = te.extractDualSubtraces(traceListCorrected, te.signalLimitsImag, invert = False)

#signalTracesCor = te.extractDualSubtraces(traceListCorrected, te.signalLimitsImag, invert = True)

#traceListSpikesRej = te.spikeRejection(traceListCorrected, signalTracesRaw, te.voltageThreshold, te.timeThreshold, saveSpikes=True)
#signalTracesAccpt = te.extractDualSubtraces(traceListSpikesRej[0], te.signalLimitsImag, invert = True)
#signalTracesRej = te.extractDualSubtraces(traceListSpikesRej[1], te.signalLimitsImag, invert = True)

#signalSums = te.sumDualTraces(signalTracesCor)
#signalSumsAccpt = te.sumDualTraces(signalTracesAccpt)
#signalSumsRej = te.sumDualTraces(signalTracesRej)

#tp.pedestalDualPlot(pedestalSumsInverted, te.PIL, te.PIU, 'CsI Trace', 'WLS Fiber Trace',te.horizontalUnits, '12_Summed_Pedestal_Distribution.png')

#Make fake histograms to get bin information and canvas dimensions
#binsCsI = np.linspace(np.min(signalSums[:,0]),5*np.median(signalSums[:,0]),100)
#binsWLS = np.linspace(np.min(signalSums[:,1]),5*np.median(signalSums[:,1]),100)
#nCsI, trash1, trash2 = plt.hist(signalSums[:,0], binsCsI, alpha=1.0)
#plt.close()
#nWLS, trash1, trash2 = plt.hist(signalSums[:,1], binsWLS, alpha=1.0)
#plt.close()
#nCsI = max(nCsI) + 10
#nWLS = max(nWLS) + 10

#tp.plotPHD(signalSums[:,0], te.SIL, te.SIU, binsCsI, 'Uncorrected CsI PHD', 'CsI Trace Sums', 
#	te.horizontalUnits, 'blue', nCsI, '1_Summed_PHD_Full.png')
#tp.plotPHD(signalSums[:,1], te.SIL, te.SIU, binsWLS, 'Uncorrected WSL Fiber PHD', 'WLS Fiber Trace Sums',
#	te.horizontalUnits, 'red', nWLS, '2_Summed_PHD_Full.png')

#tp.plotPHD(signalSumsAccpt[:,0], te.SIL, te.SIU, binsCsI, 'Corrected CsI PHD', 'CsI Trace Sums',
#	te.horizontalUnits, 'blue', nCsI, '1_Summed_PHD_Accepted.png')
#tp.plotPHD(signalSumsAccpt[:,1], te.SIL, te.SIU, binsWLS, 'Corrected WSL Fiber PHD', 'WLS Fiber Trace Sums',
#	te.horizontalUnits, 'red', nWLS, '2_Summed_PHD_Accepted.png')

#tp.plotPHD(signalSumsRej[:,0], te.SIL, te.SIU, binsCsI, 'Rejected CsI PHD', 'CsI Trace Sums',
#	te.horizontalUnits, 'blue', nCsI, '1_Summed_PHD_Rejected.png')
#tp.plotPHD(signalSumsRej[:,1], te.SIL, te.SIU, binsWLS, 'Rejected WSL Fiber PHD', 'WLS Fiber Trace Sums',
#	te.horizontalUnits, 'red', nWLS, '2_Summed_PHD_Rejected.png')


#Print out the first 10 traces and every 100 after that.
#for i, element in enumerate(traceListSpikesRej[0]):
#	
#	if (i in [0,1,2,3,4,5,6,7,8,9]) or ((i % 100) == 0):
#		
#		tp.plotDualTrace(element[:,0], element[:,1], te.horizontalSymmetricStartPhys, 
#			te.horizontalSymmetricStopPhys, te.horizontalSampleNumber, te.horizontalGridNumber,
#			te.veritcalStart, te.verticalEnd, te.verticalGridNumber, 'APT Raw Detector Trace',
#			te.horizontalUnits, te.SIL, te.SIU, te.PIL, te.PIU, 'blue', 'red', 'CsI PMT', 'WLS Fiber PMT',
#			'APT_raw_trace_'+str(i)+'.png')